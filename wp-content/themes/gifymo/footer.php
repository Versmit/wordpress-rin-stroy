</div><!-- #content -->
</div><!-- .site-content-contain -->
<footer id="colophon" class="site-footer">
	<?php
	if ( gifymo_is_footer_builder() ) {
		gifymo_the_footer_builder();
	} else {
		get_template_part( 'template-parts/footer' );
	}

	do_action( 'opal-render-footer' );
	?>
</footer><!-- #colophon -->
</div><!-- #page -->
<?php do_action( 'opal_end_wrapper' ) ?>
</div><!-- end.opal-wrapper-->
<?php wp_footer(); ?>
<script>
document.addEventListener('DOMContentLoaded', function() {
    const searchIcon = document.getElementById('search-icon');
    const searchForm = document.getElementById('mobile-search-form');

    /* —Ç–∏—Ö–æ –≤—ã—Ö–æ–¥–∏–º, –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–µ—Ç */
    if ( ! searchIcon || ! searchForm ) return;

    searchIcon.addEventListener('click', function (e) {
        e.preventDefault();
        searchForm.classList.toggle('active');
    });
});
</script>
<script>
document.addEventListener('DOMContentLoaded', () => {
  const blocks = document.querySelectorAll('.product-block');
  if (!blocks.length) return;            /* –¥—Ä—É–≥–∏—Ö –±–ª–æ–∫–æ–≤ –Ω–µ—Ç¬†‚Äì —Å–∫—Ä–∏–ø—Ç –Ω–µ –Ω—É–∂–µ–Ω */

  blocks.forEach(block => {
    const gallery       = block.querySelector('.product-gallery');
    const images        = gallery?.querySelectorAll('.product-image') || [];
    const dotsContainer = block.querySelector('.product-dots');
    if (!images.length || !dotsContainer) return;   // ‰øùÈô∫

    let current = 0;

    /* —Å–æ–∑–¥–∞—ë–º —Ç–æ—á–∫–∏ */
    images.forEach((img, idx) => {
      const dot = document.createElement('div');
      dot.className = 'dot' + (idx ? '' : ' active');
      dot.addEventListener('click', () => update(idx));
      dotsContainer.appendChild(dot);
    });

    /* –∫–æ–ª–µ—Å–æ –º—ã—à–∏ */
    block.addEventListener('wheel', e => {
      current = (current + (e.deltaY > 0 ? 1 : images.length - 1)) % images.length;
      update(current);
      e.preventDefault();
    });

    function update(i) {
      gallery.style.transform = `translateX(${-i * 220}px)`;
      dotsContainer
        .querySelectorAll('.dot')
        .forEach((d, n) => d.classList.toggle('active', n === i));
    }
  });
});
</script>
<!-- –≠—Ç–æ –Ω–∞—à –±–ª–æ–∫ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ -->
<div id="popupContactOptions" style="display: none;">
    <!-- –°—Å—ã–ª–∫–∏ –Ω–∞ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä—ã -->
    <a href="https://api.whatsapp.com/send/?phone=79260533750" target="_blank"><i class="fab fa-whatsapp"></i></a>
    <a href="https://t.me/RIN_stroy" target="_blank"><i class="fab fa-telegram-plane"></i></a>
    <a href="mailto:info@rin-stroy.ru"><i class="fas fa-envelope"></i></a>
    <a href="tel:+74993947490"><i class="fas fa-phone-alt"></i></a> <!-- –ò–∫–æ–Ω–∫–∞ –∑–≤–æ–Ω–∫–∞ -->
</div>
<script>
document.addEventListener("DOMContentLoaded", function() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –º–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è
    if (window.innerWidth <= 768) {
        // –ò—â–µ–º —Å—Ç—Ä–µ–ª–æ—á–∫—É
        const toggleArrow = document.querySelector('.callback a');
        const popupContactOptions = document.getElementById('popupContactOptions'); // –ë–ª–æ–∫ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏

        if (toggleArrow && popupContactOptions) {
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —Å—Ç—Ä–µ–ª–æ—á–∫–µ
            toggleArrow.addEventListener('click', function(event) {
                event.preventDefault();
                console.log('–ö–ª–∏–∫ –ø–æ —Å—Ç—Ä–µ–ª–æ—á–∫–µ –ø—Ä–æ–∏–∑–æ—à–µ–ª.');

                // –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –±–ª–æ–∫ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
                if (popupContactOptions.style.display === 'block') {
                    popupContactOptions.style.display = 'none';
                } else {
                    popupContactOptions.style.display = 'block';
                }
            });
            
            console.log("–°—Ç—Ä–µ–ª–æ—á–∫–∞ –Ω–∞–π–¥–µ–Ω–∞, –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω.");
        } else {
            console.log("–°—Ç—Ä–µ–ª–æ—á–∫–∞ –∏–ª–∏ –±–ª–æ–∫ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.");
        }
    }
});
</script>
<script>
jQuery(document).ready(function($) {
    $('.rutube-video-link').on('click', function(e) {
        e.preventDefault();

        var videoUrl = $(this).data('video-url');
        var embedUrl = getRutubeEmbedUrl(videoUrl);

        var iframe = '<iframe width="100%" height="600" src="' + embedUrl + '" frameborder="0" allowfullscreen></iframe>';

        // –ó–∞–º–µ–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –≤–∏–¥–µ–æ
        $('.woocommerce-product-gallery__wrapper').html('<div class="woocommerce-product-gallery__image">' + iframe + '</div>');
    });

    function getRutubeEmbedUrl(url) {
        var match = url.match(/video\/([a-zA-Z0-9]+)/);
        if (match) {
            return 'https://rutube.ru/play/embed/' + match[1];
        }
        return '';
    }
});
</script>
<script>
document.addEventListener('DOMContentLoaded', () => {

  /* ---- –∏—â–µ–º —Ä–∞–∑–º–µ—Ç–∫—É –±–∞–Ω–Ω–µ—Ä–∞ ---- */
  const images      = document.querySelectorAll('.banner-image');
  const h1Element   = document.querySelector('.banner-text-2');
  const pElement    = document.querySelector('.banner-text-1');

  /* ‚ñ∏ –µ—Å–ª–∏ —á–µ–≥–æ‚Äë—Ç–æ –Ω–µ—Ç ‚Äì –ø—Ä–æ—Å—Ç–æ –≤—ã—Ö–æ–¥–∏–º */
  if (!images.length || !h1Element || !pElement) return;

  /* ---- –µ—Å—Ç—å –±–∞–Ω–Ω–µ—Ä, –º–æ–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å ---- */
  const texts = [
    { h1: 'HABEZ‚ÄëGIPS', p: '–†–ò–ù‚Äë–°—Ç—Ä–æ–π¬†‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–∏ –ø—Ä–æ–¥—É–∫—Ü–∏–∏' },
    { h1: 'INVENTO',   p: '–°–∞–º—ã–µ –ª—É—á—à–∏–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã'            },
    { h1: 'AKSOLIT',   p: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —Å–ª–æ–∂–Ω–µ–µ¬†‚Äì –æ—Ç–¥–µ–ª–∫–∞ –ø—Ä–æ—â–µ'             },
    { h1: '–ì–∏–ø—Å–æ–ª–∏—Ç',  p: '–í—Ä–µ–º—è –ø–µ—Ä–µ–º–µ–Ω'                                  }
  ];

  let current = 0;
  images[current].classList.add('active');
  h1Element.textContent = texts[current].h1;
  pElement.textContent  = texts[current].p;
  h1Element.style.opacity = 1;
  pElement.style.opacity  = 1;

  function nextSlide () {
    images[current].classList.remove('active');
    h1Element.style.opacity = 0;
    pElement.style.opacity  = 0;

    current = (current + 1) % images.length;

    setTimeout(() => {
      images[current].classList.add('active');
      h1Element.textContent = texts[current].h1;
      pElement.textContent  = texts[current].p;
      h1Element.style.opacity = 1;
      pElement.style.opacity  = 1;
    }, 500);
  }

  setInterval(nextSlide, 4000);
});
</script>
<script>
document.addEventListener('DOMContentLoaded', () => {
  const gallery = document.querySelector('.gallery');
  if (!gallery) return;                 /* ‚Üê –µ—Å–ª–∏ –≥–∞–ª–µ—Ä–µ–∏ –Ω–µ—Ç ‚Äì –≤—ã—Ö–æ–¥–∏–º */

  const galleryWrapper = gallery.parentElement;

  /* –¥—É–±–ª–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è –±–µ—Å—à–æ–≤–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ */
  gallery.innerHTML += gallery.innerHTML;

  let galleryWidth      = gallery.scrollWidth / 2;
  let currentTranslateX = 0;
  let requestId;
  let isAnimating       = true;

  function animate () {
    currentTranslateX -= 1;
    if (currentTranslateX <= -galleryWidth) currentTranslateX = 0;
    gallery.style.transform = `translateX(${currentTranslateX}px)`;
    requestId = requestAnimationFrame(animate);
  }
  animate();

  window.addEventListener('resize', () => {
    galleryWidth      = gallery.scrollWidth / 2;
    currentTranslateX = 0;
  });

  galleryWrapper.addEventListener('mouseenter', () => {
    cancelAnimationFrame(requestId);
    isAnimating = false;
  });
  galleryWrapper.addEventListener('mouseleave', () => {
    if (!isAnimating) { isAnimating = true; animate(); }
  });
});
</script>
<script>
document.addEventListener('DOMContentLoaded', () => {
  const carousel = document.querySelector('.category-carousel');
  const leftBtn  = document.querySelector('.carousel-btn.left');
  const rightBtn = document.querySelector('.carousel-btn.right');
  if (!carousel || !leftBtn || !rightBtn || !carousel.children.length) return;

  let itemWidth = calcItemWidth();
  let pos = 0, busy = false;

  rightBtn.addEventListener('click', scrollLeft);  // üëâ
  leftBtn .addEventListener('click', scrollRight); // üëà
  window.addEventListener('resize', () => { itemWidth = calcItemWidth(); });

  function calcItemWidth() {
    const item = carousel.children[0];
    const style = getComputedStyle(item);
    return item.offsetWidth + parseFloat(style.marginLeft) + parseFloat(style.marginRight);
  }

  function scrollLeft() {
    if (busy) return; busy = true;
    carousel.style.transition = 'transform .5s';
    pos -= itemWidth;
    carousel.style.transform = `translateX(${pos}px)`;

    carousel.addEventListener('transitionend', function te() {
      carousel.removeEventListener('transitionend', te);
      carousel.appendChild(carousel.firstElementChild);
      carousel.style.transition = 'none';
      pos += itemWidth;
      carousel.style.transform = `translateX(${pos}px)`;
      busy = false;
    });
  }

  function scrollRight() {
    if (busy) return; busy = true;
    carousel.insertBefore(carousel.lastElementChild, carousel.firstElementChild);
    carousel.style.transition = 'none';
    pos -= itemWidth;
    carousel.style.transform = `translateX(${pos}px)`;
    requestAnimationFrame(() => {
      requestAnimationFrame(() => {
        carousel.style.transition = 'transform .5s';
        pos += itemWidth;
        carousel.style.transform = `translateX(${pos}px)`;
      });
    });
    carousel.addEventListener('transitionend', () => (busy = false), { once:true });
  }
});
</script>
<script>
    document.addEventListener("DOMContentLoaded", function() {
        function openPopup(imageUrl) {
            document.getElementById("popup-image").src = imageUrl;
            document.getElementById("popup").style.display = "block";
        }

        function closePopup() {
            document.getElementById("popup").style.display = "none";
            document.getElementById("popup-image").src = "";
        }

        window.onclick = function(event) {
            if (event.target == document.getElementById("popup")) {
                closePopup();
            }
        }

        // –°–¥–µ–ª–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏
        window.openPopup = openPopup;
        window.closePopup = closePopup;
    });
</script>
    <script>
        jQuery(document).ready(function($) {
            var frame;
            $('.upload_image_button').on('click', function(e) {
                e.preventDefault();
                var button = $(this);

                // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
                frame = wp.media({
                    title: '–í—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
                    button: {
                        text: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'
                    },
                    multiple: false
                });

                // –î–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                frame.on('select', function() {
                    var attachment = frame.state().get('selection').first().toJSON();
                    button.prev('input').val(attachment.url);
                });

                // –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
                frame.open();
            });
        });
    </script>
    <script>
function openPopup(imageSrc) {
    document.getElementById('popup-image').src = imageSrc;
    document.getElementById('popup').style.display = 'block';
    document.body.classList.add('popup-active'); // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å
}

function closePopup() {
    document.getElementById('popup').style.display = 'none';
    document.body.classList.remove('popup-active'); // –£–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å
}
    </script>
<script>
document.addEventListener('DOMContentLoaded', () => {

  const filters       = document.querySelectorAll('.filter');
  const showAllButton = document.getElementById('showAll');
  const certificates  = document.querySelectorAll('.carousel-item-new');

  /* ‚¨áÔ∏è   –ï–°–õ–ò –ª—é–±–∞—è –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–π –ø—É—Å—Ç–∞ ‚Äî –ø—Ä–æ—Å—Ç–æ –≤—ã—Ö–æ–¥–∏–º */
  if (!filters.length || !showAllButton || !certificates.length) {
      console.log('cert‚Äëfilter: —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–µ—Ç –Ω–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ');
      return;               /* ‚Üê —Ç–µ–ø–µ—Ä—å return –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –í–ù–£–¢–†–ò —Ñ—É–Ω–∫—Ü–∏–∏ */
  }
  filters.forEach(filter => {
    filter.addEventListener('click', e => {
      e.preventDefault();
      const category = filter.getAttribute('data-cert');
      certificates.forEach(cert => {
        cert.style.display =
          cert.getAttribute('data-category') === category ? 'block' : 'none';
      });
    });
  });

  showAllButton.addEventListener('click', () => {
    certificates.forEach(cert => cert.style.display = 'block');
  });

});
</script>

<script>
document.addEventListener("DOMContentLoaded", function () {
    let calculatorDiv = document.getElementById("gips-calculator");
    if (!calculatorDiv) return;

    // –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
    let productCategory = window.productCategory || "unknown";

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–ª–æ—â–∞–¥—å –æ–¥–Ω–æ–≥–æ –ª–∏—Å—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    let areaPerSheet = productCategory === "gipsokarton" ? 3 :
                       productCategory === "pazogrebnevye-plity" ? 0.3335 :
                       3; // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≥–∏–ø—Å–æ–∫–∞—Ä—Ç–æ–Ω

    console.log("–û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è:", productCategory);
    console.log("–ò—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –ø–ª–æ—â–∞–¥—å –º–∞—Ç–µ—Ä–∏–∞–ª–∞:", areaPerSheet);

    calculatorDiv.innerHTML = `
        <div class="gips-container">
            <h3>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ä–∞—Å—á–µ—Ç–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞</h3>

            <div class="gips-mode-options">
                <label><input type="radio" name="calcMode" value="area" checked> –í–≤–µ—Å—Ç–∏ –æ–±—â—É—é –ø–ª–æ—â–∞–¥—å</label>
                <label><input type="radio" name="calcMode" value="dimensions"> –í–≤–µ—Å—Ç–∏ –¥–ª–∏–Ω—É –∏ –≤—ã—Å–æ—Ç—É</label>
            </div>

            <div id="areaInput" class="gips-inputs">
                <label>–û–±—â–∞—è –ø–ª–æ—â–∞–¥—å (–º¬≤): <input type="number" id="totalArea" min="1" step="0.1"></label>
                <label>–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∞—Å (%): <input type="number" id="reserve" min="0" step="1" value="10"></label>
            </div>

            <div id="dimensionsInput" class="gips-inputs" style="display: none;">
                <label>–î–ª–∏–Ω–∞ —Å—Ç–µ–Ω—ã (–º): <input type="number" id="length" min="1" step="0.1"></label>
                <label>–í—ã—Å–æ—Ç–∞ —Å—Ç–µ–Ω—ã (–º): <input type="number" id="height" min="1" step="0.1"></label>
                <label>–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∞—Å (%): <input type="number" id="reserve-dim" min="0" step="1" value="10"></label>
            </div>

            <button id="calculateBtn" type="button">–†–∞—Å—Å—á–∏—Ç–∞—Ç—å</button>

            <p id="result" class="gips-result"></p>
        </div>
    `;

    let calcModeRadios = document.querySelectorAll('input[name="calcMode"]');
    let areaInput      = document.getElementById("areaInput");
    let dimensionsInput= document.getElementById("dimensionsInput");

    calcModeRadios.forEach(radio => {
        radio.addEventListener("change", function () {
            if (this.value === "area") {
                areaInput.style.display = "flex";
                dimensionsInput.style.display = "none";
            } else {
                areaInput.style.display = "none";
                dimensionsInput.style.display = "flex";
            }
        });
    });

    document.getElementById("calculateBtn").addEventListener("click", function () {
        let mode = document.querySelector('input[name="calcMode"]:checked').value;
        let totalArea = 0;
        let reserve = 0;

        if (mode === "area") {
            totalArea = parseFloat(document.getElementById("totalArea").value);
            reserve   = parseFloat(document.getElementById("reserve").value);
        } else {
            let length = parseFloat(document.getElementById("length").value);
            let height = parseFloat(document.getElementById("height").value);
            reserve    = parseFloat(document.getElementById("reserve-dim").value);
            if (length > 0 && height > 0) {
                totalArea = length * height;
            }
        }

        if (totalArea > 0) {
            let totalWithReserve = totalArea * (1 + reserve / 100);
            let sheetsNeeded     = Math.ceil(totalWithReserve / areaPerSheet);

            console.log("–û–±—â–∞—è –ø–ª–æ—â–∞–¥—å —Å –∑–∞–ø–∞—Å–æ–º:", totalWithReserve);
            console.log("–†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:", sheetsNeeded);

            document.getElementById("result").innerHTML = `
                –û–±—â–∞—è –ø–ª–æ—â–∞–¥—å: <strong>${totalWithReserve.toFixed(2)}</strong> –º¬≤ <br>
                –ù–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: <strong>${sheetsNeeded}</strong> —à—Ç.
            `;
        } else {
            document.getElementById("result").innerHTML = "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!";
        }
    });
});
</script>
<script>
document.addEventListener("DOMContentLoaded", function() {
    let addToCartButton = document.querySelector('.single_add_to_cart_button');
    if (addToCartButton) {
        addToCartButton.innerText = "–í –∫–æ—Ä–∑–∏–Ω—É";
    }
});
</script>
<script>
document.addEventListener("DOMContentLoaded", function() {
    // –ó–∞–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É
    let notices = document.querySelectorAll('.woocommerce-message');
    notices.forEach(function(notice) {
        if (notice.innerText.includes("has been added to your cart.")) {
            notice.innerText = notice.innerText.replace("has been added to your cart.", "–¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É.");
        }
    });

    // –ó–∞–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ "View cart"
    let viewCartButtons = document.querySelectorAll('.wc-forward');
    viewCartButtons.forEach(function(button) {
        if (button.innerText.includes("View cart")) {
            button.innerText = "–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É";
        }
    });

});
</script>
<script>
console.log("–ö–ª–∞—Å—Å—ã body:", document.body.classList);
</script>
<script>
document.addEventListener('DOMContentLoaded', function () {
  function initCategoryToggle() {
    const items = document.querySelectorAll('.wc-block-product-categories-list-item');

    if (items.length === 0) {
      setTimeout(initCategoryToggle, 300);
      return;
    }

    const currentUrl = window.location.href;

    items.forEach(function (item) {
      const subMenu = item.querySelector('ul.wc-block-product-categories-list');
      const link = item.querySelector('a');

      if (link && !item.classList.contains('toggle-ready')) {
        const toggle = document.createElement('span');
        toggle.classList.add('category-toggle');

        // ‚úÖ SVG –±–µ–∑ inline-—Å—Ç–∏–ª–µ–π ‚Äî —Ü–≤–µ—Ç –∏ —Ç–æ–ª—â–∏–Ω–∞ —Ç–µ–ø–µ—Ä—å –∑–∞–¥–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ CSS
        toggle.innerHTML = `
          <svg class="category-icon" width="12" height="12" viewBox="0 0 24 24">
            <path d="M8 5l8 7-8 7" />
          </svg>
        `;

        if (subMenu) {
          toggle.addEventListener('click', function (e) {
            e.preventDefault();

            // üîÅ –ê–∫–∫–æ—Ä–¥–µ–æ–Ω: –∑–∞–∫—Ä—ã—Ç—å –≤—Å–µ, –∫—Ä–æ–º–µ —Ç–µ–∫—É—â–µ–≥–æ
            items.forEach(i => {
              if (i !== item) {
                i.classList.remove('open');
              }
            });

            item.classList.toggle('open');
          });

          item.classList.add('has-children');
        }

        link.parentElement.insertBefore(toggle, link);
        item.classList.add('toggle-ready');
      }

      // üß† –ê–≤—Ç–æ—Ä–∞—Å–∫—Ä—ã—Ç–∏–µ, –µ—Å–ª–∏ —Ç–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ‚Äî —á–∞—Å—Ç—å –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π
      const nestedLinks = item.querySelectorAll('ul a');
      nestedLinks.forEach(function (nestedLink) {
        if (currentUrl.includes(nestedLink.href)) {
          item.classList.add('open');
        }
      });
    });
  }

  initCategoryToggle();
});
</script>
</body>
</html>
